[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kyle Zollo-Venecek. Author, maintainer. Robert Miller. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zollo-Venecek K, Miller R (2024). gaiaCore: Functions interacting gaiaDB OHDSI GIS software suite. R package version 0.0.0.9000.","code":"@Manual{,   title = {gaiaCore: Functions for interacting with gaiaDB and the OHDSI GIS software suite},   author = {Kyle Zollo-Venecek and Robert Miller},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Functions for interacting with gaiaDB and the OHDSI GIS software suite","text":"Please visit webpage details --date information software documentation. project management, see GIS Project Page Click propose new Use Case.","code":""},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Functions for interacting with gaiaDB and the OHDSI GIS software suite","text":"Instructions quickly install start using Gaia ","code":""},{"path":"/index.html","id":"support","dir":"","previous_headings":"","what":"Support","title":"Functions for interacting with gaiaDB and the OHDSI GIS software suite","text":"Developer questions/comments/feedback: OHDSI Forum Please use GitHub issue tracker bugs/issues/enhancements","code":""},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Functions for interacting with gaiaDB and the OHDSI GIS software suite","text":"eager engage interested developers interest experience frontend, backend, geospatial development. interested contributing don’t know begin, please join OHDSI GIS WG email zollovenecek[]ohdsi[dot]org","code":""},{"path":"/reference/addDataSource.html","id":null,"dir":"Reference","previous_headings":"","what":"Append a well-formatted data_source record to the backbone.data_source table in PostGIS — addDataSource","title":"Append a well-formatted data_source record to the backbone.data_source table in PostGIS — addDataSource","text":"Append well-formatted data_source record backbone.data_source table PostGIS","code":""},{"path":"/reference/addDataSource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append a well-formatted data_source record to the backbone.data_source table in PostGIS — addDataSource","text":"","code":"addDataSource(connectionDetails, dataSource)"},{"path":"/reference/addDataSource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append a well-formatted data_source record to the backbone.data_source table in PostGIS — addDataSource","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function dataSource (data.frame) well-formatted data source record. Typically created using gaiaSourceCreator RShiny.","code":""},{"path":"/reference/addDataSource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append a well-formatted data_source record to the backbone.data_source table in PostGIS — addDataSource","text":"new record backbone.data_source table PostGIS","code":""},{"path":"/reference/appendAttrIndexRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Append a attr_index record to the attrIndexTable object — appendAttrIndexRecord","title":"Append a attr_index record to the attrIndexTable object — appendAttrIndexRecord","text":"Append attr_index record attrIndexTable object","code":""},{"path":"/reference/appendAttrIndexRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append a attr_index record to the attrIndexTable object — appendAttrIndexRecord","text":"","code":"appendAttrIndexRecord(   attrIndexTable,   geomIndexTable,   dataSourceRecord,   variableSourceRecord )"},{"path":"/reference/appendAttrIndexRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append a attr_index record to the attrIndexTable object — appendAttrIndexRecord","text":"attrIndexTable (data.frame) existing attrIndexTable geomIndexTable (data.frame) existing geomIndexTable dataSourceRecord (data.frame) full record (entire row) backbone.data_source table","code":""},{"path":"/reference/appendAttrIndexRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append a attr_index record to the attrIndexTable object — appendAttrIndexRecord","text":"(data.frame) updated attrIndexTable","code":""},{"path":"/reference/appendGeomIndexRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Append a geom_index record to the geomIndexTable object — appendGeomIndexRecord","title":"Append a geom_index record to the geomIndexTable object — appendGeomIndexRecord","text":"Append geom_index record geomIndexTable object","code":""},{"path":"/reference/appendGeomIndexRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append a geom_index record to the geomIndexTable object — appendGeomIndexRecord","text":"","code":"appendGeomIndexRecord(geomIndexTable, dataSourceRecord)"},{"path":"/reference/appendGeomIndexRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append a geom_index record to the geomIndexTable object — appendGeomIndexRecord","text":"geomIndexTable (data.frame) existing geomIndexTable dataSourceRecord (data.frame) full record (entire row) backbone.data_source table","code":""},{"path":"/reference/appendGeomIndexRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append a geom_index record to the geomIndexTable object — appendGeomIndexRecord","text":"(data.frame) updated geomIndexTable","code":""},{"path":"/reference/assignGeomIdToAttr.html","id":null,"dir":"Reference","previous_headings":"","what":"Join a column of geom_X record identifiers to a staged attr_X table — assignGeomIdToAttr","title":"Join a column of geom_X record identifiers to a staged attr_X table — assignGeomIdToAttr","text":"Join column geom_X record identifiers staged attr_X table","code":""},{"path":"/reference/assignGeomIdToAttr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join a column of geom_X record identifiers to a staged attr_X table — assignGeomIdToAttr","text":"","code":"assignGeomIdToAttr(connectionDetails, stagedResult, geomIndexId)"},{"path":"/reference/assignGeomIdToAttr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join a column of geom_X record identifiers to a staged attr_X table — assignGeomIdToAttr","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function stagedResult (data.frame) table standardized attr_template geom_template mold geomIndexId (integer) Identifier record backbone.geom_index table. Usually sourced attr_of_geom_index_id entry attr_index record","code":""},{"path":"/reference/assignGeomIdToAttr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join a column of geom_X record identifiers to a staged attr_X table — assignGeomIdToAttr","text":"(data.frame) updated stagedResult table geom_record_ids corresponding geom_X table appended","code":""},{"path":"/reference/checkTableExists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a table exists in a database — checkTableExists","title":"Check if a table exists in a database — checkTableExists","text":"Check table exists database","code":""},{"path":"/reference/checkTableExists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a table exists in a database — checkTableExists","text":"","code":"checkTableExists(connectionDetails, databaseSchema, tableName)"},{"path":"/reference/checkTableExists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a table exists in a database — checkTableExists","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function databaseSchema (character) schema contains table checked tableName (character) name table checked","code":""},{"path":"/reference/checkTableExists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a table exists in a database — checkTableExists","text":"(boolean) logical value indicating whether table exists","code":""},{"path":"/reference/checkVariableExists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a variable exists in an attr_X table — checkVariableExists","title":"Check if a variable exists in an attr_X table — checkVariableExists","text":"Check variable exists attr_X table","code":""},{"path":"/reference/checkVariableExists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a variable exists in an attr_X table — checkVariableExists","text":"","code":"checkVariableExists(connectionDetails, databaseSchema, tableName, variableName)"},{"path":"/reference/checkVariableExists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a variable exists in an attr_X table — checkVariableExists","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function databaseSchema (character) schema contains table containing variable checked tableName (character) name table containing variable checked variableName (character) name variable checked","code":""},{"path":"/reference/checkVariableExists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a variable exists in an attr_X table — checkVariableExists","text":"(boolean) logical value indicating whether variable exists","code":""},{"path":"/reference/createAttrInstanceTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an empty instance of the attr_template in a given schema in PostGIS — createAttrInstanceTable","title":"Create an empty instance of the attr_template in a given schema in PostGIS — createAttrInstanceTable","text":"Create empty instance attr_template given schema PostGIS","code":""},{"path":"/reference/createAttrInstanceTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an empty instance of the attr_template in a given schema in PostGIS — createAttrInstanceTable","text":"","code":"createAttrInstanceTable(connectionDetails, schema, name)"},{"path":"/reference/createAttrInstanceTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an empty instance of the attr_template in a given schema in PostGIS — createAttrInstanceTable","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function schema (character) name schema PostGIS empty attr_X created name (character) suffix table name created; appended \"attr_\"","code":""},{"path":"/reference/createAttrInstanceTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an empty instance of the attr_template in a given schema in PostGIS — createAttrInstanceTable","text":"empty table (attr_X) PostGIS","code":""},{"path":"/reference/createAttrInstanceTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an empty instance of the attr_template in a given schema in PostGIS — createAttrInstanceTable","text":"","code":"if (FALSE) { # \\dontrun{  variableSourceId <- 157  variableTable <- DatabaseConnector::dbGetQuery(conn, paste0(\"SELECT * FROM backbone.variable_source WHERE variable_source_id = \", variableSourceId))  attrIndex <- DatabaseConnector::dbGetQuery(conn, paste0(\"SELECT * FROM backbone.attr_index WHERE data_source_id = \", variableTable$data_source_uuid,\";\"))  createAttrInstanceTable(conn, schema = attrIndex$database_schema, name = attrIndex$table_name) } # }"},{"path":"/reference/createDdl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrencePrimaryKeys","title":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrencePrimaryKeys","text":"createDdl, createForeignKeys, createPrimaryKeys functions return character string containing respective DDL SQL code OHDSQL dialect specific CDM version. SQL generate needs rendered translated can executed.","code":""},{"path":"/reference/createDdl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrencePrimaryKeys","text":"","code":"createOccurrencePrimaryKeys(gaiaVersion)  createOccurrenceForeignKeys(gaiaVersion)  createDdl(gaiaVersion)  createPrimaryKeys(gaiaVersion)  createForeignKeys(gaiaVersion)"},{"path":"/reference/createDdl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrencePrimaryKeys","text":"gaiaVersion version gaiaDB creating, e.g. 001","code":""},{"path":"/reference/createDdl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrencePrimaryKeys","text":"character string containing postgresql DDL","code":""},{"path":"/reference/createDdl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrencePrimaryKeys","text":"DDL SQL code created two csv files detail OMOP CDM Specifications. files also form basis CDM documentation Data Quality Dashboard.","code":""},{"path":"/reference/createDdl.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrencePrimaryKeys","text":"createOccurrencePrimaryKeys(): createPrimaryKeys Returns string containing OHDSQL creation primary keys OMOP CDM. createOccurrenceForeignKeys(): createForeignKeys Returns string containing OHDSQL creation foreign keys OMOP CDM. createPrimaryKeys(): createPrimaryKeys Returns string containing OHDSQL creation primary keys OMOP CDM. createForeignKeys(): createForeignKeys Returns string containing OHDSQL creation foreign keys OMOP CDM.","code":""},{"path":"/reference/createDdl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrencePrimaryKeys","text":"","code":"ddl <- createDdl(\"001\") pk <- createPrimaryKeys(\"001\") fk <- createForeignKeys(\"001\")"},{"path":"/reference/createExposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an exposure_occurrence (exposure) table from a variable source id — createExposure","title":"Create an exposure_occurrence (exposure) table from a variable source id — createExposure","text":"Create exposure_occurrence (exposure) table variable source id","code":""},{"path":"/reference/createExposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an exposure_occurrence (exposure) table from a variable source id — createExposure","text":"","code":"createExposure(connectionDetails, variableSourceId, locationImport)"},{"path":"/reference/createExposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an exposure_occurrence (exposure) table from a variable source id — createExposure","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function variableSourceId (integer) variable source id variable create exposure table locationImport (data.frame) data frame columns location_id geometry. Represents geocoded locations","code":""},{"path":"/reference/createExposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an exposure_occurrence (exposure) table from a variable source id — createExposure","text":"(data.frame) OMOP CDM exposure_occurrence table specified variable source id locations","code":""},{"path":"/reference/createExposure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an exposure_occurrence (exposure) table from a variable source id — createExposure","text":"function creates exposure_occurrence table given variable source id geocoded locations. exposure_occurrence table created joining variable table geom table joining geom table geocoded locations. exposure_occurrence table created selecting relevant columns variable table geocoded locations. locationImport data frame columns location_id geometry. location_id column integer representing location_id geocoded location. geometry column binary representation geometry geocoded location:","code":"locationImport <- read.csv('geocoded_location_snippet.csv', sep=\"|\", header=FALSE) locationImport <- dplyr::rename(locationImport, location_id=1, lat=11, lon=12) locationImport <- dplyr::mutate(locationImport,     location_id=as.integer(location_id),     lat=as.numeric(lat),     lon=as.numeric(gsub(\"[\\\\n]\", \"\", lon))) locationImport <- dplyr::filter(locationImport, !is.na(lat) & !is.na(lon)) locationImport <- locationImport_sf <- sf::st_as_sf(locationImport, coords=c('lon', 'lat'), crs=4326) locationImport <- dplyr::select(locationImport, location_id, geometry) locationImport <- data.frame(locationImport) locationImport$geometry <-     sf::st_as_binary(locationImport$geometry, EWKB = TRUE, hex = TRUE)  #> head(locationImport) #=>   location_id                                           geometry #=> 1           1 0101000020e610000072230d5ff6c351c000023164d0284540 #=> 2           2 0101000020e61000007222df852d8a52c0978b9d95594e4440 #=> 3           3 0101000020e610000076319xaa4ae351c0ba0a73cc43124540 #=> 4           4 0101000020e61000001d90fdfc97bc51c08a05bea2dbdd4440"},{"path":"/reference/createExposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an exposure_occurrence (exposure) table from a variable source id — createExposure","text":"","code":"if (FALSE) { # \\dontrun{ # Create exposure_occurrence table for a given variable  variableSourceId <- 1 # Percentile Percentage of persons below poverty estimate  locationImport <- data.frame(location) exposure_occurrence <- createExposure(connectionDetails, variableSourceId, locationImport) } # }"},{"path":"/reference/createGeomInstanceTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an empty instance of the geom_template in a given schema in PostGIS — createGeomInstanceTable","title":"Create an empty instance of the geom_template in a given schema in PostGIS — createGeomInstanceTable","text":"Create empty instance geom_template given schema PostGIS","code":""},{"path":"/reference/createGeomInstanceTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an empty instance of the geom_template in a given schema in PostGIS — createGeomInstanceTable","text":"","code":"createGeomInstanceTable(connectionDetails, schema, name)"},{"path":"/reference/createGeomInstanceTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an empty instance of the geom_template in a given schema in PostGIS — createGeomInstanceTable","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function schema (character) name schema PostGIS empty geom_X created name (character) suffix table name created; appended \"geom_\"","code":""},{"path":"/reference/createGeomInstanceTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an empty instance of the geom_template in a given schema in PostGIS — createGeomInstanceTable","text":"empty table (geom_X) PostGIS","code":""},{"path":"/reference/createGeomInstanceTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an empty instance of the geom_template in a given schema in PostGIS — createGeomInstanceTable","text":"","code":"if (FALSE) { # \\dontrun{  variableSourceId <- 157  variableTable <- DatabaseConnector::dbGetQuery(conn, paste0(\"SELECT * FROM backbone.variable_source WHERE variable_source_id = \", variableSourceId))  dataSourceRecord <- getDataSourceRecord(conn, variableTable$data_source_uuid)  geomIndex <- getGeomIndexByDataSourceUuid(conn, dataSourceRecord$geom_dependency_uuid)  createGeomInstanceTable(conn = conn, schema =  geomIndex$database_schema, name = geomIndex$table_name) } # }"},{"path":"/reference/createGeomTableIndexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create indexes on a geom_* table — createGeomTableIndexes","title":"Create indexes on a geom_* table — createGeomTableIndexes","text":"Create indexes geom_* table","code":""},{"path":"/reference/createGeomTableIndexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create indexes on a geom_* table — createGeomTableIndexes","text":"","code":"createGeomTableIndexes(connectionDetails, schema, name)"},{"path":"/reference/createGeomTableIndexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create indexes on a geom_* table — createGeomTableIndexes","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function schema (character) name schema name (character) geometry table name","code":""},{"path":"/reference/createGeomTableIndexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create indexes on a geom_* table — createGeomTableIndexes","text":"Indexes two geometry columns (geom_local_value, geom_wgs84)","code":""},{"path":"/reference/createIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and populate backbone.geom_index and backbone.attr_index from registered sources in backbone.data_source — createIndices","title":"Create and populate backbone.geom_index and backbone.attr_index from registered sources in backbone.data_source — createIndices","text":"Create populate backbone.geom_index backbone.attr_index registered sources backbone.data_source","code":""},{"path":"/reference/createIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and populate backbone.geom_index and backbone.attr_index from registered sources in backbone.data_source — createIndices","text":"","code":"createIndices(connectionDetails)"},{"path":"/reference/createIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and populate backbone.geom_index and backbone.attr_index from registered sources in backbone.data_source — createIndices","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function","code":""},{"path":"/reference/createIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and populate backbone.geom_index and backbone.attr_index from registered sources in backbone.data_source — createIndices","text":"Two tables (backbone.geom_index backbone.attr_index) PostGIS","code":""},{"path":"/reference/createIndices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and populate backbone.geom_index and backbone.attr_index from registered sources in backbone.data_source — createIndices","text":"","code":"if (FALSE) { # \\dontrun{ createIndices(connectionDetails = connectionDetails) } # }"},{"path":"/reference/createNameString.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize and create table name from source values — createNameString","title":"Sanitize and create table name from source values — createNameString","text":"Sanitize create table name source values","code":""},{"path":"/reference/createNameString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize and create table name from source values — createNameString","text":"","code":"createNameString(name)"},{"path":"/reference/createNameString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize and create table name from source values — createNameString","text":"name (character) Table name source value","code":""},{"path":"/reference/createNameString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize and create table name from source values — createNameString","text":"(character) Sanitized table name string","code":""},{"path":"/reference/createOccurrenceDdl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrenceDdl","title":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrenceDdl","text":"createDdl, createForeignKeys, createPrimaryKeys functions return character string containing respective DDL SQL code OHDSQL dialect specific CDM version. SQL generate needs rendered translated can executed.","code":""},{"path":"/reference/createOccurrenceDdl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrenceDdl","text":"","code":"createOccurrenceDdl(gaiaVersion)"},{"path":"/reference/createOccurrenceDdl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrenceDdl","text":"cdmVersion version CDM creating, e.g. 5.3, 5.4","code":""},{"path":"/reference/createOccurrenceDdl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrenceDdl","text":"character string containing OHDSQL DDL","code":""},{"path":"/reference/createOccurrenceDdl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrenceDdl","text":"DDL SQL code created two csv files detail OMOP CDM Specifications. files also form basis CDM documentation Data Quality Dashboard.","code":""},{"path":"/reference/createOccurrenceDdl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the OHDSI-SQL Common Data Model DDL code — createOccurrenceDdl","text":"","code":"ddl <- createDdl(\"5.4\") #> Error in system.file(file.path(\"csv\", paste0(\"gaia\", gaiaVersion, \"tableLevel.csv\")),     package = \"gaiaCore\", mustWork = TRUE): no file found pk <- createPrimaryKeys(\"5.4\") #> Error in createPrimaryKeys(\"5.4\"): gaiaVersion %in% c(\"001\") is not TRUE fk <- createForeignKeys(\"5.4\") #> Error in createForeignKeys(\"5.4\"): gaiaVersion %in% c(\"001\") is not TRUE"},{"path":"/reference/createSchemaString.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the schema and sanitize source values — createSchemaString","title":"Create the schema and sanitize source values — createSchemaString","text":"Create schema sanitize source values","code":""},{"path":"/reference/createSchemaString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the schema and sanitize source values — createSchemaString","text":"","code":"createSchemaString(rec)"},{"path":"/reference/createSchemaString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the schema and sanitize source values — createSchemaString","text":"rec (data.frame) full record (entire row) backbone.data_source table","code":""},{"path":"/reference/createSchemaString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the schema and sanitize source values — createSchemaString","text":"(character) Sanitized schema string","code":""},{"path":"/reference/geocodeAddresses.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode a table with addresses — geocodeAddresses","title":"Geocode a table with addresses — geocodeAddresses","text":"Geocode table addresses","code":""},{"path":"/reference/geocodeAddresses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode a table with addresses — geocodeAddresses","text":"","code":"geocodeAddresses(addressTable)"},{"path":"/reference/geocodeAddresses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode a table with addresses — geocodeAddresses","text":"addressTable (data.frame) table column addresses prepared Degauss geocoder. Addresses must formatted \"123 Main Street Boston MA 02108\" See https://degauss.org/using_degauss.html#Geocoding detailed information input address formatting","code":""},{"path":"/reference/geocodeAddresses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode a table with addresses — geocodeAddresses","text":"(data.frame) original input table columns lat lon instead address column","code":""},{"path":"/reference/geocodeAddresses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geocode a table with addresses — geocodeAddresses","text":"","code":"dontrun #> Error: object 'dontrun' not found {   geocodeAddresses(addressTable = cohortWithAddresses) } #> Error in vctrs::vec_size_common(string = string, pattern = pattern, replacement = replacement,     .call = error_call): object 'cohortWithAddresses' not found"},{"path":"/reference/getAttrIndexRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single record from the backbone.attr_index table — getAttrIndexRecord","title":"Get a single record from the backbone.attr_index table — getAttrIndexRecord","text":"Get single record backbone.attr_index table","code":""},{"path":"/reference/getAttrIndexRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single record from the backbone.attr_index table — getAttrIndexRecord","text":"","code":"getAttrIndexRecord(connectionDetails, variableSourceId)"},{"path":"/reference/getAttrIndexRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single record from the backbone.attr_index table — getAttrIndexRecord","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function dataSourceUuid (UUID) UUID data source registered backbone.attr_index table","code":""},{"path":"/reference/getAttrIndexRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single record from the backbone.attr_index table — getAttrIndexRecord","text":"(data.frame) full record (entire row) backbone.attr_index table","code":""},{"path":"/reference/getAttrIndexTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the backbone.attr_index table — getAttrIndexTable","title":"Get the backbone.attr_index table — getAttrIndexTable","text":"Get backbone.attr_index table","code":""},{"path":"/reference/getAttrIndexTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the backbone.attr_index table — getAttrIndexTable","text":"","code":"getAttrIndexTable(connectionDetails)"},{"path":"/reference/getAttrIndexTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the backbone.attr_index table — getAttrIndexTable","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function","code":""},{"path":"/reference/getAttrIndexTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the backbone.attr_index table — getAttrIndexTable","text":"(data.frame) entire backbone.attr_index table","code":""},{"path":"/reference/getAttrNameFromVariableSourceId.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the name of a variable_source's attr dependency — getAttrNameFromVariableSourceId","title":"Get the name of a variable_source's attr dependency — getAttrNameFromVariableSourceId","text":"Get name variable_source's attr dependency","code":""},{"path":"/reference/getAttrNameFromVariableSourceId.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the name of a variable_source's attr dependency — getAttrNameFromVariableSourceId","text":"","code":"getAttrNameFromVariableSourceId(connectionDetails, variableSourceId)"},{"path":"/reference/getAttrNameFromVariableSourceId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the name of a variable_source's attr dependency — getAttrNameFromVariableSourceId","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function","code":""},{"path":"/reference/getAttrNameFromVariableSourceId.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the name of a variable_source's attr dependency — getAttrNameFromVariableSourceId","text":"(character) schema table name source attr dependency","code":""},{"path":"/reference/getAttrNameFromVariableSourceId.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the name of a variable_source's attr dependency — getAttrNameFromVariableSourceId","text":"","code":"if (FALSE) { # \\dontrun{ attrName <- getAttrNameFromVariableSourceId(connectionDetails, 101) } # }"},{"path":"/reference/getAttrOfGeomIndexId.html","id":null,"dir":"Reference","previous_headings":"","what":"Get foreign key for attr_of_geom_index_id — getAttrOfGeomIndexId","title":"Get foreign key for attr_of_geom_index_id — getAttrOfGeomIndexId","text":"Get foreign key attr_of_geom_index_id","code":""},{"path":"/reference/getAttrOfGeomIndexId.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get foreign key for attr_of_geom_index_id — getAttrOfGeomIndexId","text":"","code":"getAttrOfGeomIndexId(geomIndexTable, dataSourceUuid)"},{"path":"/reference/getAttrOfGeomIndexId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get foreign key for attr_of_geom_index_id — getAttrOfGeomIndexId","text":"geomIndexTable (data.frame) existing geomIndexTable dataSourceUuid (UUID) UUID geometry data source registered backbone.data_source table","code":""},{"path":"/reference/getAttrOfGeomIndexId.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get foreign key for attr_of_geom_index_id — getAttrOfGeomIndexId","text":"(integer) Identifier corresponding backbone.geom_index entry","code":""},{"path":"/reference/getAttrTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the attr_template table — getAttrTemplate","title":"Get the attr_template table — getAttrTemplate","text":"Get attr_template table","code":""},{"path":"/reference/getAttrTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the attr_template table — getAttrTemplate","text":"","code":"getAttrTemplate(connectionDetails)"},{"path":"/reference/getAttrTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the attr_template table — getAttrTemplate","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function","code":""},{"path":"/reference/getAttrTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the attr_template table — getAttrTemplate","text":"(data.frame) empty attr_template table","code":""},{"path":"/reference/getCohortAddresses.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Cohort Addresses — getCohortAddresses","title":"Get Cohort Addresses — getCohortAddresses","text":"Get Cohort Addresses","code":""},{"path":"/reference/getCohortAddresses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Cohort Addresses — getCohortAddresses","text":"","code":"getCohortAddresses(connectionDetails, cdmDatabaseSchema, cohort)"},{"path":"/reference/getCohortAddresses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Cohort Addresses — getCohortAddresses","text":"connectionDetails (list) connecting OMOP server. object class connectionDetails created createConnectionDetails function cohort (data.frame) table includes columns named \"SUBJECT_ID\" contains list OMOP person_ids. Ideally, OHDSI cohort table cdmDatabseSchema (character) Schema name patient-level data OMOP CDM format resides. Note SQL Server, include database schema name, example 'cdm_data.dbo'.","code":""},{"path":"/reference/getCohortAddresses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Cohort Addresses — getCohortAddresses","text":"(data.frame) augmented Cohort table patient addresses attached","code":""},{"path":"/reference/getCohortAddresses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Cohort Addresses — getCohortAddresses","text":"","code":"if (FALSE) { # \\dontrun{ getCohortAddresses(connectionDetails = connectionDetails,                    cdmDatabaseSchema = \"myDatabase.dbo\",                    cohort = cohort) } # }"},{"path":"/reference/getDataSourceRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single record from the backbone.data_source table — getDataSourceRecord","title":"Get a single record from the backbone.data_source table — getDataSourceRecord","text":"Get single record backbone.data_source table","code":""},{"path":"/reference/getDataSourceRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single record from the backbone.data_source table — getDataSourceRecord","text":"","code":"getDataSourceRecord(connectionDetails, dataSourceUuid)"},{"path":"/reference/getDataSourceRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single record from the backbone.data_source table — getDataSourceRecord","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function dataSourceUuid (UUID) UUID data source registered backbone.data_source table","code":""},{"path":"/reference/getDataSourceRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single record from the backbone.data_source table — getDataSourceRecord","text":"(data.frame) full record (entire row) backbone.data_source table","code":""},{"path":"/reference/getDataSourceTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the entire backbone.data_source table — getDataSourceTable","title":"Get the entire backbone.data_source table — getDataSourceTable","text":"Get entire backbone.data_source table","code":""},{"path":"/reference/getDataSourceTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the entire backbone.data_source table — getDataSourceTable","text":"","code":"getDataSourceTable(connectionDetails)"},{"path":"/reference/getDataSourceTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the entire backbone.data_source table — getDataSourceTable","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function","code":""},{"path":"/reference/getDataSourceTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the entire backbone.data_source table — getDataSourceTable","text":"(data.frame) entire backbone.data_source table","code":""},{"path":"/reference/getGeomIdMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a mapping table between identifiers and values for a given geom_X — getGeomIdMap","title":"Create a mapping table between identifiers and values for a given geom_X — getGeomIdMap","text":"Create mapping table identifiers values given geom_X","code":""},{"path":"/reference/getGeomIdMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a mapping table between identifiers and values for a given geom_X — getGeomIdMap","text":"","code":"getGeomIdMap(connectionDetails, geomIndexId)"},{"path":"/reference/getGeomIdMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a mapping table between identifiers and values for a given geom_X — getGeomIdMap","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function geomIndexId (integer) Identifier record backbone.geom_index table. Usually sourced attr_of_geom_index_id entry attr_index record","code":""},{"path":"/reference/getGeomIdMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a mapping table between identifiers and values for a given geom_X — getGeomIdMap","text":"(data.frame) mapping table geom_record_id given geom_X record's source value","code":""},{"path":"/reference/getGeomIdMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a mapping table between identifiers and values for a given geom_X — getGeomIdMap","text":"","code":"if (FALSE) { # \\dontrun{ geomIdMap <- getGeomIdMap(conn = conn, geomIndex = 1) } # }"},{"path":"/reference/getGeomIndexRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a record from the backbone.geom_index table from it's corresponding UUID in backbone.data_source table — getGeomIndexRecord","title":"Get a record from the backbone.geom_index table from it's corresponding UUID in backbone.data_source table — getGeomIndexRecord","text":"Get record backbone.geom_index table corresponding UUID backbone.data_source table","code":""},{"path":"/reference/getGeomIndexRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a record from the backbone.geom_index table from it's corresponding UUID in backbone.data_source table — getGeomIndexRecord","text":"","code":"getGeomIndexRecord(connectionDetails, dataSourceUuid)"},{"path":"/reference/getGeomIndexRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a record from the backbone.geom_index table from it's corresponding UUID in backbone.data_source table — getGeomIndexRecord","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function dataSourceUuid (UUID) UUID data source registered backbone.data_source table","code":""},{"path":"/reference/getGeomIndexRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a record from the backbone.geom_index table from it's corresponding UUID in backbone.data_source table — getGeomIndexRecord","text":"(data.frame) full record (entire row) backbone.geom_index table","code":""},{"path":"/reference/getGeomIndexTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the backbone.geom_index table — getGeomIndexTable","title":"Get the backbone.geom_index table — getGeomIndexTable","text":"Get backbone.geom_index table","code":""},{"path":"/reference/getGeomIndexTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the backbone.geom_index table — getGeomIndexTable","text":"","code":"getGeomIndexTable(connectionDetails)"},{"path":"/reference/getGeomIndexTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the backbone.geom_index table — getGeomIndexTable","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function","code":""},{"path":"/reference/getGeomIndexTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the backbone.geom_index table — getGeomIndexTable","text":"(data.frame) entire backbone.geom_index table","code":""},{"path":"/reference/getGeomNameFromVariableSourceId.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the name of a variable_source's geom dependency — getGeomNameFromVariableSourceId","title":"Get the name of a variable_source's geom dependency — getGeomNameFromVariableSourceId","text":"Get name variable_source's geom dependency","code":""},{"path":"/reference/getGeomNameFromVariableSourceId.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the name of a variable_source's geom dependency — getGeomNameFromVariableSourceId","text":"","code":"getGeomNameFromVariableSourceId(connectionDetails, variableSourceId)"},{"path":"/reference/getGeomNameFromVariableSourceId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the name of a variable_source's geom dependency — getGeomNameFromVariableSourceId","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function variableSourceId (integer) Identifier record variable_source table","code":""},{"path":"/reference/getGeomNameFromVariableSourceId.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the name of a variable_source's geom dependency — getGeomNameFromVariableSourceId","text":"(character) schema table name source geom dependency","code":""},{"path":"/reference/getGeomNameFromVariableSourceId.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the name of a variable_source's geom dependency — getGeomNameFromVariableSourceId","text":"","code":"if (FALSE) { # \\dontrun{ geomName <- getGeomNameFromVariableSourceId(connectionDetails, 101) } # }"},{"path":"/reference/getGeomTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the geom_template table — getGeomTemplate","title":"Get the geom_template table — getGeomTemplate","text":"Get geom_template table","code":""},{"path":"/reference/getGeomTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the geom_template table — getGeomTemplate","text":"","code":"getGeomTemplate(connectionDetails)"},{"path":"/reference/getGeomTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the geom_template table — getGeomTemplate","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function","code":""},{"path":"/reference/getGeomTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the geom_template table — getGeomTemplate","text":"(data.frame) empty geom_template table","code":""},{"path":"/reference/getLocationAddresses.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Location Table Addresses — getLocationAddresses","title":"Get Location Table Addresses — getLocationAddresses","text":"Get Location Table Addresses","code":""},{"path":"/reference/getLocationAddresses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Location Table Addresses — getLocationAddresses","text":"","code":"getLocationAddresses(connectionDetails, cdmDatabaseSchema)"},{"path":"/reference/getLocationAddresses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Location Table Addresses — getLocationAddresses","text":"connectionDetails (list) connecting OMOP server. object class connectionDetails created createConnectionDetails function cdmDatabseSchema (character) Schema name patient-level data OMOP CDM format resides. Note SQL Server, include database schema name, example 'cdm_data.dbo'.","code":""},{"path":"/reference/getLocationAddresses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Location Table Addresses — getLocationAddresses","text":"(data.frame) transformed Location table addresses existing latitude longitudes attached","code":""},{"path":"/reference/getLocationAddresses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Location Table Addresses — getLocationAddresses","text":"","code":"if (FALSE) { # \\dontrun{ getLocationAddresses(connectionDetails = connectionDetails,                    cdmDatabaseSchema = myDatabase.dbo) } # }"},{"path":"/reference/getStaged.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and import data from a web-hosted source — getStaged","title":"Download and import data from a web-hosted source — getStaged","text":"Download import data web-hosted source","code":""},{"path":"/reference/getStaged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and import data from a web-hosted source — getStaged","text":"","code":"getStaged(rec, storageConfig = readStorageConfig())"},{"path":"/reference/getStaged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and import data from a web-hosted source — getStaged","text":"rec (data.frame) full record (entire row) backbone.data_source table corresponding data source interest. Usually created using getDataSourceRecord function","code":""},{"path":"/reference/getStaged.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and import data from a web-hosted source — getStaged","text":"(data.frame) untransformed version source data","code":""},{"path":"/reference/getStaged.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and import data from a web-hosted source — getStaged","text":"","code":"if (FALSE) { # \\dontrun{ staged <- getStaged(dataSourceRecord) } # }"},{"path":"/reference/getVariableSourceRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single record from the backbone.variable_source table — getVariableSourceRecord","title":"Get a single record from the backbone.variable_source table — getVariableSourceRecord","text":"Get single record backbone.variable_source table","code":""},{"path":"/reference/getVariableSourceRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single record from the backbone.variable_source table — getVariableSourceRecord","text":"","code":"getVariableSourceRecord(connectionDetails, variableSourceId)"},{"path":"/reference/getVariableSourceRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single record from the backbone.variable_source table — getVariableSourceRecord","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function variableSourceId (integer) identifier data source registered backbone.variable_source table","code":""},{"path":"/reference/getVariableSourceRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single record from the backbone.variable_source table — getVariableSourceRecord","text":"(data.frame) full record (entire row) backbone.variable_source table","code":""},{"path":"/reference/getVariableSourceSummaryTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Variable Source Summary table — getVariableSourceSummaryTable","title":"Get the Variable Source Summary table — getVariableSourceSummaryTable","text":"Get Variable Source Summary table","code":""},{"path":"/reference/getVariableSourceSummaryTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Variable Source Summary table — getVariableSourceSummaryTable","text":"","code":"getVariableSourceSummaryTable(connectionDetails)"},{"path":"/reference/getVariableSourceSummaryTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Variable Source Summary table — getVariableSourceSummaryTable","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function","code":""},{"path":"/reference/getVariableSourceSummaryTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Variable Source Summary table — getVariableSourceSummaryTable","text":"(data.frame) table variable source records boolean column loaded.","code":""},{"path":"/reference/getVariableSourceSummaryTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Variable Source Summary table — getVariableSourceSummaryTable","text":"","code":"if (FALSE) { # \\dontrun{ variableSourceSummaryTable <- getVariableSourceSummaryTable(connectionDetails) } # }"},{"path":"/reference/getVariableSourceTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the backbone.variable_source table — getVariableSourceTable","title":"Get the backbone.variable_source table — getVariableSourceTable","text":"Get backbone.variable_source table","code":""},{"path":"/reference/getVariableSourceTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the backbone.variable_source table — getVariableSourceTable","text":"","code":"getVariableSourceTable(connectionDetails)"},{"path":"/reference/getVariableSourceTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the backbone.variable_source table — getVariableSourceTable","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function","code":""},{"path":"/reference/getVariableSourceTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the backbone.variable_source table — getVariableSourceTable","text":"(data.frame) entire backbone.variable_source table","code":""},{"path":"/reference/importAttrIndexTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Import the attr_index table to PostGIS — importAttrIndexTable","title":"Import the attr_index table to PostGIS — importAttrIndexTable","text":"Import attr_index table PostGIS","code":""},{"path":"/reference/importAttrIndexTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import the attr_index table to PostGIS — importAttrIndexTable","text":"","code":"importAttrIndexTable(connectionDetails, attrIndexTable)"},{"path":"/reference/importAttrIndexTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import the attr_index table to PostGIS — importAttrIndexTable","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function attrIndexTable (data.frame) entire backbone.attr_index table","code":""},{"path":"/reference/importAttrIndexTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import the attr_index table to PostGIS — importAttrIndexTable","text":"populated backbone.attr_index table PostGIS","code":""},{"path":"/reference/importAttrTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a well-formatted attribute table into an empty instance of attr_X in PostGIS — importAttrTable","title":"Import a well-formatted attribute table into an empty instance of attr_X in PostGIS — importAttrTable","text":"Import well-formatted attribute table empty instance attr_X PostGIS","code":""},{"path":"/reference/importAttrTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a well-formatted attribute table into an empty instance of attr_X in PostGIS — importAttrTable","text":"","code":"importAttrTable(connectionDetails, attribute, attrIndex)"},{"path":"/reference/importAttrTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a well-formatted attribute table into an empty instance of attr_X in PostGIS — importAttrTable","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function attribute (data.frame) well-formatted attribute. Created appending staging data table attr_template attrIndex (data.frame) full record (entire row) backbone.attr_index table corresponding registered attribute interest","code":""},{"path":"/reference/importAttrTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a well-formatted attribute table into an empty instance of attr_X in PostGIS — importAttrTable","text":"table (attr_X) PostGIS","code":""},{"path":"/reference/importCohortTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a geocoded cohort table to gaiaDB — importCohortTable","title":"Import a geocoded cohort table to gaiaDB — importCohortTable","text":"Import geocoded cohort table gaiaDB","code":""},{"path":"/reference/importCohortTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a geocoded cohort table to gaiaDB — importCohortTable","text":"","code":"importCohortTable(gaiaConnectionDetails, cohort, overwrite = FALSE)"},{"path":"/reference/importCohortTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a geocoded cohort table to gaiaDB — importCohortTable","text":"gaiaConnectionDetails (list) connecting gaiaDB. object class connectionDetails created createConnectionDetails function cohort (data.frame) OHDSI cohort table POINT geometry column named geometry overwrite (boolean) Overwrite existing tables cohort schema?","code":""},{"path":"/reference/importCohortTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a geocoded cohort table to gaiaDB — importCohortTable","text":"new cohort table gaiaDB cohort schema","code":""},{"path":"/reference/importCohortTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a geocoded cohort table to gaiaDB — importCohortTable","text":"","code":"if (FALSE) { # \\dontrun{ importCohortTable(gaiaConnectionDetails = gaiaConnectionDetails,                   cohort = geocodedCohort,                   overwrite = FALSE) } # }"},{"path":"/reference/importGeomIndexTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Import the geom_index table to PostGIS — importGeomIndexTable","title":"Import the geom_index table to PostGIS — importGeomIndexTable","text":"Import geom_index table PostGIS","code":""},{"path":"/reference/importGeomIndexTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import the geom_index table to PostGIS — importGeomIndexTable","text":"","code":"importGeomIndexTable(connectionDetails, geomIndexTable)"},{"path":"/reference/importGeomIndexTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import the geom_index table to PostGIS — importGeomIndexTable","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function geomIndexTable (data.frame) entire backbone.geom_index table","code":""},{"path":"/reference/importGeomIndexTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import the geom_index table to PostGIS — importGeomIndexTable","text":"populated backbone.geom_index table PostGIS","code":""},{"path":"/reference/importGeomTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a well-formatted geometry table into an empty instance of geom_X in PostGIS — importGeomTable","title":"Import a well-formatted geometry table into an empty instance of geom_X in PostGIS — importGeomTable","text":"Import well-formatted geometry table empty instance geom_X PostGIS","code":""},{"path":"/reference/importGeomTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a well-formatted geometry table into an empty instance of geom_X in PostGIS — importGeomTable","text":"","code":"importGeomTable(connectionDetails, staged, geomIndex)"},{"path":"/reference/importGeomTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a well-formatted geometry table into an empty instance of geom_X in PostGIS — importGeomTable","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function staged (data.frame) well-formatted geometry table. Created appending staging data table geom_template geomIndex (data.frame) full record (entire row) backbone.geom_index table corresponding registered geometry interest","code":""},{"path":"/reference/importGeomTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a well-formatted geometry table into an empty instance of geom_X in PostGIS — importGeomTable","text":"table (geom_X) PostGIS","code":""},{"path":"/reference/importLocationTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a geocoded cohort table to gaiaDB — importLocationTable","title":"Import a geocoded cohort table to gaiaDB — importLocationTable","text":"Import geocoded cohort table gaiaDB","code":""},{"path":"/reference/importLocationTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a geocoded cohort table to gaiaDB — importLocationTable","text":"","code":"importLocationTable(gaiaConnectionDetails, location, overwrite = FALSE)"},{"path":"/reference/importLocationTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a geocoded cohort table to gaiaDB — importLocationTable","text":"gaiaConnectionDetails (list) connecting gaiaDB. object class connectionDetails created createConnectionDetails function location (data.frame) table OMOP location_ids, address string, POINT geometry column named geometry overwrite (boolean) Overwrite existing tables cohort schema?","code":""},{"path":"/reference/importLocationTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a geocoded cohort table to gaiaDB — importLocationTable","text":"new geom_omop_location table gaiaDB omop schema","code":""},{"path":"/reference/importLocationTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a geocoded cohort table to gaiaDB — importLocationTable","text":"","code":"if (FALSE) { # \\dontrun{ importLocationTable(gaiaConnectionDetails = gaiaConnectionDetails,                     location = geocodedLocation,                     overwrite = FALSE) } # }"},{"path":"/reference/initializeDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize gaiaDB — initializeDatabase","title":"Initialize gaiaDB — initializeDatabase","text":"Initialize gaiaDB","code":""},{"path":"/reference/initializeDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize gaiaDB — initializeDatabase","text":"","code":"initializeDatabase(connectionDetails, overwrite = FALSE, testing = FALSE)"},{"path":"/reference/initializeDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize gaiaDB — initializeDatabase","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function overwrite (boolean) Potential loss data, proceed caution! Drop backbone schema reinitialize? lose custom data variable sources added overwrite backbone schema.","code":""},{"path":"/reference/initializeDatabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize gaiaDB — initializeDatabase","text":"(database schema) gaiaDB backbone schema added database connectionDetails","code":""},{"path":"/reference/initializeDatabase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize gaiaDB — initializeDatabase","text":"","code":"if (FALSE) { # \\dontrun{  connectionDetails <- DatabaseConnector::createConnectionDetails(    dbms = \"postgresql\",    server = \"\", # name of the server    port = 5432,    user=\"postgres\", # username to access server    password = \"mysecretpassword\")   initializeDatabase(connectionDetails) } # }"},{"path":"/reference/insertPostgisGeometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to the Postgis database and insert a geometry table — insertPostgisGeometry","title":"Connect to the Postgis database and insert a geometry table — insertPostgisGeometry","text":"Connect Postgis database insert geometry table","code":""},{"path":"/reference/insertPostgisGeometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to the Postgis database and insert a geometry table — insertPostgisGeometry","text":"","code":"insertPostgisGeometry(connectionDetails, staged, geomIndex)"},{"path":"/reference/insertPostgisGeometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to the Postgis database and insert a geometry table — insertPostgisGeometry","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function staged (data.frame) well-formatted geometry table. Created appending staging data table geom_template geomIndex (data.frame) full record (entire row) backbone.geom_index table corresponding registered geometry interest","code":""},{"path":"/reference/insertPostgisGeometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to the Postgis database and insert a geometry table — insertPostgisGeometry","text":"table (geom_X) PostGIS","code":""},{"path":"/reference/loadGeometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads a geometry from a registered source into PostGIS as geom_X — loadGeometry","title":"Loads a geometry from a registered source into PostGIS as geom_X — loadGeometry","text":"Loads geometry registered source PostGIS geom_X","code":""},{"path":"/reference/loadGeometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads a geometry from a registered source into PostGIS as geom_X — loadGeometry","text":"","code":"loadGeometry(connectionDetails, dataSourceUuid)"},{"path":"/reference/loadGeometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads a geometry from a registered source into PostGIS as geom_X — loadGeometry","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function dataSourceUuid (UUID) UUID data source registered backbone.data_source table","code":""},{"path":"/reference/loadGeometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads a geometry from a registered source into PostGIS as geom_X — loadGeometry","text":"table (geom_X) PostGIS","code":""},{"path":"/reference/loadGeometry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loads a geometry from a registered source into PostGIS as geom_X — loadGeometry","text":"","code":"if (FALSE) { # \\dontrun{  variableSourceId <- 157  variableTable <- DatabaseConnector::dbGetQuery(conn, paste0(\"SELECT * FROM backbone.variable_source WHERE variable_source_id = \", variableSourceId))  dataSourceRecord <- getDataSourceRecord(conn, variableTable$data_source_uuid)  geomIndex <- getGeomIndexByDataSourceUuid(conn, dataSourceRecord$geom_dependency_uuid)  if (!DatabaseConnector::existsTable(conn, geomIndex$database_schema, paste0(\"geom_\",geomIndex$table_name))) {   message(\"Loading geom table dependency\")   loadGeomTable(conn, connectionDetails, dataSourceRecord$geom_dependency_uuid) } } # }"},{"path":"/reference/loadVariable.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads a variable from a registered source into PostGIS as attr_X — loadVariable","title":"Loads a variable from a registered source into PostGIS as attr_X — loadVariable","text":"Loads variable registered source PostGIS attr_X","code":""},{"path":"/reference/loadVariable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads a variable from a registered source into PostGIS as attr_X — loadVariable","text":"","code":"loadVariable(connectionDetails, variableSourceId)"},{"path":"/reference/loadVariable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads a variable from a registered source into PostGIS as attr_X — loadVariable","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function variableSourceId (integer) identifier variable registered PostGIS variable_source table","code":""},{"path":"/reference/loadVariable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads a variable from a registered source into PostGIS as attr_X — loadVariable","text":"table (attr_X) PostGIS","code":""},{"path":"/reference/loadVariable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loads a variable from a registered source into PostGIS as attr_X — loadVariable","text":"","code":"if (FALSE) { # \\dontrun{  variableSourceId <- 157  variableSourceRecord <- DatabaseConnector::dbGetQuery(conn, paste0(\"SELECT * FROM backbone.variable_source WHERE variable_source_id = \", variableSourceId))  attrIndex <- DatabaseConnector::dbGetQuery(conn, paste0(\"SELECT * FROM backbone.attr_index WHERE data_source_id = \", variableSourceRecord$data_source_uuid,\";\"))  tableExists <- DatabaseConnector::existsTable(conn,                                               attrIndex$database_schema,                                               paste0(\"attr_\", attrIndex$table_name))  if (!tableExists) {   message(\"Loading attr table dependency\")   loadVariable(connectionDetails = connectionDetails, variableSourceId) } } # }"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/readFromZip.html","id":null,"dir":"Reference","previous_headings":"","what":"Unzip and read contents of a zipfile into R memory — readFromZip","title":"Unzip and read contents of a zipfile into R memory — readFromZip","text":"Unzip read contents zipfile R memory","code":""},{"path":"/reference/readFromZip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unzip and read contents of a zipfile into R memory — readFromZip","text":"","code":"readFromZip(zipfile, exdir, rec)"},{"path":"/reference/readFromZip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unzip and read contents of a zipfile into R memory — readFromZip","text":"zipfile (character) path compressed file exdir (character) path contents compressed file extracted rec (data.frame) full record (entire row) backbone.data_source table corresponding data source interest. Usually created using getDataSourceRecord function","code":""},{"path":"/reference/readFromZip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unzip and read contents of a zipfile into R memory — readFromZip","text":"(data.frame) untransformed version source data","code":""},{"path":"/reference/readStorageConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Read config.yml file from inst — readStorageConfig","title":"Read config.yml file from inst — readStorageConfig","text":"Read config.yml file inst","code":""},{"path":"/reference/readStorageConfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read config.yml file from inst — readStorageConfig","text":"","code":"readStorageConfig()"},{"path":"/reference/readStorageConfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read config.yml file from inst — readStorageConfig","text":"(list) User-defined storage configuration","code":""},{"path":"/reference/setSridWgs84.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the SRID on the geom_wgs84 column in PostGIS gaiaDB — setSridWgs84","title":"Set the SRID on the geom_wgs84 column in PostGIS gaiaDB — setSridWgs84","text":"Set SRID geom_wgs84 column PostGIS gaiaDB","code":""},{"path":"/reference/setSridWgs84.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the SRID on the geom_wgs84 column in PostGIS gaiaDB — setSridWgs84","text":"","code":"setSridWgs84(connectionDetails, geometryType, geomIndex)"},{"path":"/reference/setSridWgs84.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the SRID on the geom_wgs84 column in PostGIS gaiaDB — setSridWgs84","text":"connectionDetails (list) object class connectionDetails created createConnectionDetails function geomIndex (data.frame) full record (entire row) backbone.geom_index table corresponding registered geometry interest staged (data.frame) well-formatted geometry table. Created appending staging data table geom_template","code":""},{"path":"/reference/setSridWgs84.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the SRID on the geom_wgs84 column in PostGIS gaiaDB — setSridWgs84","text":"SRID set 4326 geom_wgs84 column given table gaiaDB","code":""},{"path":"/reference/splitAddresses.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a table of addresses based on presence of coordinates — splitAddresses","title":"Split a table of addresses based on presence of coordinates — splitAddresses","text":"Split table addresses based presence coordinates","code":""},{"path":"/reference/splitAddresses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a table of addresses based on presence of coordinates — splitAddresses","text":"","code":"splitAddresses(addressTable)"},{"path":"/reference/splitAddresses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a table of addresses based on presence of coordinates — splitAddresses","text":"addressTable (data.frame) table addresses. two columns named \"LATITUDE\" \"LONGITUDE\", function just return table -.","code":""},{"path":"/reference/splitAddresses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a table of addresses based on presence of coordinates — splitAddresses","text":"(list) Two dataframes (geocoded ungeocoded) inside list object. LATITUDE LONGITUDE column, original table addresses returned item list.","code":""},{"path":"/reference/splitAddresses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a table of addresses based on presence of coordinates — splitAddresses","text":"","code":"addressTable <- tibble::tibble(   \"LOCATION_ID\" = 1:6,   \"ADDRESS\" = c(     \"456 WOOD STREET  MALDEN MA 02148\",                       \"123 MAIN ST APT 111  BROOKLINE MA 02446\",             \"999 DUCK STREET WEYMOUTH MA 02188\",     \"100 PRESIDENT STREET MILTON MA 02186\",                     \"1 SOUTH AVE REVERE MA 02151\",                  \"99 BEACH ROAD SOUTH DENNIS MA 02660\"),   \"LATITUDE\" = c(NA_real_, 22.2, NA_real_, NA_real_, 43.666, 75.6),   \"LONGITUDE\" = c(33.3, NA_real_, NA_real_, NA_real_, 43.666, 75.6)     )      results <- splitAddresses(addressTable)  results$ungeocoded # addresses and location_ids without prepopulated coordinates #> # A tibble: 4 × 4 #>   LOCATION_ID ADDRESS                                 LATITUDE LONGITUDE #>         <int> <chr>                                      <dbl>     <dbl> #> 1           1 456 WOOD STREET  MALDEN MA 02148            NA        33.3 #> 2           2 123 MAIN ST APT 111  BROOKLINE MA 02446     22.2      NA   #> 3           3 999 DUCK STREET WEYMOUTH MA 02188           NA        NA   #> 4           4 100 PRESIDENT STREET MILTON MA 02186        NA        NA   results$geocoded # addresses and location_ids with prepopulated coordinates #> # A tibble: 2 × 4 #>   LOCATION_ID ADDRESS                             LATITUDE LONGITUDE #>         <int> <chr>                                  <dbl>     <dbl> #> 1           5 1 SOUTH AVE REVERE MA 02151             43.7      43.7 #> 2           6 99 BEACH ROAD SOUTH DENNIS MA 02660     75.6      75.6"},{"path":"/reference/standardizeStaged.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a standardized version of the staged data that was imported from source — standardizeStaged","title":"Create a standardized version of the staged data that was imported from source — standardizeStaged","text":"Create standardized version staged data imported source","code":""},{"path":"/reference/standardizeStaged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a standardized version of the staged data that was imported from source — standardizeStaged","text":"","code":"standardizeStaged(staged, spec)"},{"path":"/reference/standardizeStaged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a standardized version of the staged data that was imported from source — standardizeStaged","text":"staged (data.frame) Table attributes imported source getStaged function spec (JSON) attr_spec backbone.variable_source table geom_spec backbone.data_source.","code":""},{"path":"/reference/standardizeStaged.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a standardized version of the staged data that was imported from source — standardizeStaged","text":"(data.frame) table standardized attr_template geom_template mold","code":""},{"path":"/reference/standardizeStaged.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a standardized version of the staged data that was imported from source — standardizeStaged","text":"","code":"if (FALSE) { # \\dontrun{ stagedResult <- standardizeStaged(staged = staged, spec = variableTable$attr_spec) } # }"},{"path":"/reference/writeDdl.html","id":null,"dir":"Reference","previous_headings":"","what":"Write gaiaDB DDL script — writeOccurrencePrimaryKeys","title":"Write gaiaDB DDL script — writeOccurrencePrimaryKeys","text":"Write DDL SQL file. SQL rendered (parameters replaced) translated target SQL dialect. default @cdmDatabaseSchema parameter kept SQL file needs replaced execution.","code":""},{"path":"/reference/writeDdl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write gaiaDB DDL script — writeOccurrencePrimaryKeys","text":"","code":"writeOccurrencePrimaryKeys(   targetDialect,   gaiaVersion,   outputfolder,   cdmDatabaseSchema = \"@cdmDatabaseSchema\" )  writeOccurrenceForeignKeys(   targetDialect,   gaiaVersion,   outputfolder,   cdmDatabaseSchema = \"@cdmDatabaseSchema\" )  writeOccurrenceIndex(   targetDialect,   gaiaVersion,   outputfolder,   cdmDatabaseSchema = \"@cdmDatabaseSchema\" )  writeDdl(gaiaVersion, outputfolder)  writePrimaryKeys(gaiaVersion, outputfolder)  writeForeignKeys(gaiaVersion, outputfolder)"},{"path":"/reference/writeDdl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write gaiaDB DDL script — writeOccurrencePrimaryKeys","text":"gaiaVersion version CDM creating, e.g. 5.3, 5.4 outputfolder directory folder SQL file saved.","code":""},{"path":"/reference/writeDdl.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Write gaiaDB DDL script — writeOccurrencePrimaryKeys","text":"writeOccurrencePrimaryKeys(): writePrimaryKeys Write SQL code creates primary keys file. writeOccurrenceForeignKeys(): writeForeignKeys Write SQL code creates foreign keys file. writeOccurrenceIndex(): writeIndex Write rendered translated sql creates recommended indexes file. writePrimaryKeys(): writePrimaryKeys Write SQL code creates primary keys file. writeForeignKeys(): writeForeignKeys Write SQL code creates foreign keys file.","code":""},{"path":"/reference/writeOccurrenceDdl.html","id":null,"dir":"Reference","previous_headings":"","what":"Write DDL script — writeOccurrenceDdl","title":"Write DDL script — writeOccurrenceDdl","text":"Write DDL SQL file. SQL rendered (parameters replaced) translated target SQL dialect. default @cdmDatabaseSchema parameter kept SQL file needs replaced execution.","code":""},{"path":"/reference/writeOccurrenceDdl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write DDL script — writeOccurrenceDdl","text":"","code":"writeOccurrenceDdl(   targetDialect,   gaiaVersion,   outputfolder,   cdmDatabaseSchema = \"@cdmDatabaseSchema\" )"},{"path":"/reference/writeOccurrenceDdl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write DDL script — writeOccurrenceDdl","text":"targetDialect dialect target database. Choices \"oracle\", \"postgresql\", \"pdw\", \"redshift\", \"impala\", \"netezza\", \"bigquery\", \"sql server\", \"spark\", \"snowflake\", \"synapse\" outputfolder directory folder SQL file saved. cdmDatabaseSchema schema CDM instance DDL run. example, \"ohdsi.dbo\" testing sql server. Defaults \"@cdmDatabaseSchema\" cdmVersion version CDM creating, e.g. 5.3, 5.4","code":""}]
