install.packages('Sqlrender')
install.packages('SqlRender')
library(SqlRender)
translate("SELECT TOP 10 * FROM person;", "postgresql")
install.packages(DatabaseConnection)
install.packages('DatabaseConnection')
install.packages('DatabaseConnector')
?createConnectionDetails
library(DatabaseConnector)
?createConnectionDetails
connectionDetails <- createConnectionDetails(dbms="sql server",
server="NECTSICLTRDB",
user="kzollovenecek",
password="NowIAmAtTufts22")
?jdbcDrivers
downloadJdbcDrivers()
downloadJdbcDrivers("sql server")
install.packages('use_this')
install.packages('usethis')
usethis::edit_r_environ()
connectionDetails <- createConnectionDetails(dbms="sql server",
server="NECTSICLTRDB",
user="kzollovenecek",
password="NowIAmAtTufts22")
getwd()
downloadJdbcDrivers("sql server")
assign_geom_id_to_attr <- function(connectionDetails, result_df, geom_index_id){
geom_id_map <- get_geom_id_map(connectionDetails, geom_index_id)
tmp <- merge(x = result_df, y= geom_id_map, by.x = "geom_join_column", by.y = "geom_source_value")
tmp <- subset(tmp, select = -c(geom_join_column))
return(tmp)
}
source("~/gis-stuff/dev_utils.R")
ds_uuid = 8888
ds_rec <- get_data_source_record(ds_uuid)
stage_data <- get_stage_data(ds_rec)
stage_data
stage_data %>% head()
ormat table for insert ----
# get insert template
# attr_template <- DatabaseConnector::dbReadTable(conn, "backbone.attr_template")
attr_template <- get_attr_template(connectionDetails)
# create spec table
spec_df <- create_spec_table(feature_df$attr_spec)
# connect db
conn <- connect(connectionDetails)
# get feature
feature_df <- DatabaseConnector::dbGetQuery(conn, paste0("SELECT * FROM backbone.feature_index WHERE feature_index_id = ", feature_index_id))
# get feature
feature_df <- DatabaseConnector::dbGetQuery(conn, paste0("SELECT * FROM backbone.feature_index WHERE feature_index_id = ", feature_index_id))
source("~/gis-stuff/dev_utils.R")
# connect db
conn <- connect(connectionDetails)
# get feature
feature_df <- DatabaseConnector::dbGetQuery(conn, paste0("SELECT * FROM backbone.feature_index WHERE feature_index_id = ", feature_index_id))
usethis::create_github_token()
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
getwd
getwd()
setwd('./git_repos/GIS/')
getwd
getwd()
